
# 作成開始日：2025年9月5日
# 作成完了日：2025年
# 著作者名：yuuki-hiroshima
# All rights reserved.

# -------------------------------
# Custom GPT「ToDoリスト学習」より
# -------------------------------

#「追加」「一覧」「削除」の機能だけを持たせた最小構成のCLI版
# 保存機能はなし
# 追加機能：合計件数の表示
# 追加機能：空文字の追加を拒否

# タスクを入れておく「空の箱（リスト）」を用意
tasks = [] # なぜリスト？：順番があり、追加や削除が簡単だから

# 無限ループ：ユーザーが「終了」を選ぶまで繰り返す
while True:                                     # ずっと繰り返す。抜けるときは break を使う
    print("\n1) 追加  2) 一覧  3) 削除  4) 終了")  # メニューを表示（ \n は改行）
    choice = input("番号を入力: ")                # キーボードから文字列を受け取る

    if choice == "1":                           # もし「1」が入力されたら（== は「等しい」）
        title = input("タスク名: ")              # 追加したいタスクの名前をもらう
        tasks.append(title)                     # リストの末尾に追加
        print("追加しました！")                   # フィードバックとして表示

    elif choice == "2":                         # もし 「2」が入力されたら
        if not tasks:                           # リストが空なら（not は「でない」）    
            print("タスクはありません。")
        else:                                   # リストに情報があれば
            for i, t in enumerate(tasks, start=1): # enumerate は番号付きで取り出す。start=1 で1から連番
                print(f"{i}. {t}")              # f文字列：{}の中に変数を埋め込める
            print(f"合計: {len(tasks)}件")       # 追加機能（合計件数を表示）：lenで要素数を数える

    elif choice == "3":                         # もし「3」が入力されたら
        num = input("削除する番号: ")             # 文字列で入ってくる
        if num.isdigit():                       # 数字だけで構成されているかチェック
            idx = int(num) - 1                  # リストの番号は0始まりなので -1（ -1をしないと「5」と入力したら4番目の情報が消えるため）
            if 0 <= idx < len(tasks):           # 範囲内ならOK（ len() はリストの数を数えてくれる）
                removed = tasks.pop(idx)        # その位置の要素を取り除き、値を戻す（ pop()が取り出して削除する役割。 今コードでは、idxはユーザーが入力した番号）
                print(f"削除しました：{removed}")
            else:
                print("その番号はありません。")
        else:
            print("数字を入力してください。")
    
    elif choice == "4":                         # もし「4」が入力されたら
        print("終了します。")
        break                                   # while ループを抜ける

    else:
        print("1〜4の番号を入力してください。")

# --- なぜこの書き方？ ---
# list：順序がある・重複OK・追加/削除が簡単
# while True：メニュー式のCLIは「選択→処理→再表示」を繰り返すのが自然
# enumerate：番号付き表示が楽
# if/elif/else：分岐でメニューを表現（読みやすい）